local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v82=0;while true do if (0==v82) then v19=v0(v3(v30,1,1));return "";end end else local v83=0;local v84;while true do if (0==v83) then v84=v2(v0(v30,16));if v19 then local v99=v5(v84,v19);v19=nil;return v99;else return v84;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v85=(v31/((5 -(1 + 2))^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-1)) + (620 -(555 + 64)))) ;return v85-(v85%(932 -(857 + 74))) ;else local v86=(879 -(282 + 595))^(v32-(569 -(367 + 201))) ;return (((v31%(v86 + v86))>=v86) and (928 -((1851 -(1523 + 114)) + 713))) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 );v18=v18 + 2 + 0 ;return (v36 * (364 -108)) + v35 ;end local function v23() local v37=(2540 -1475) -(68 + 997) ;local v38;local v39;local v40;local v41;while true do if (v37==(0 -0)) then v38,v39,v40,v41=v1(v16,v18,v18 + (1273 -(226 + 1044)) );v18=v18 + (17 -13) ;v37=118 -(32 + 85) ;end if (v37==(1 + 0)) then return (v41 * (3720433 + 13056783)) + (v40 * (66493 -(892 + 65))) + (v39 * 256) + v38 ;end end end local function v24() local v42=0 -0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(352 -(87 + (1011 -748)))) then v47=v20(v44,201 -(67 + 113) ,23 + 8 );v48=((v20(v44,32)==(2 -1)) and  -1) or 1 ;v42=3 + 0 ;end if (v42==(0 -0)) then v43=v23();v44=v23();v42=953 -(802 + (592 -(416 + 26))) ;end if (v42==(7 -4)) then if (v47==(0 -0)) then if (v46==((0 -0) + 0)) then return v48 * (997 -(393 + 522 + 82)) ;else v47=2 -1 ;v45=0;end elseif (v47==(1193 + 854)) then return ((v46==(0 -0)) and (v48 * (1/(1187 -(1069 + 118))))) or (v48 * NaN) ;end return v8(v48,v47-(2320 -1297) ) * (v45 + (v46/((3 -(1 -0))^(10 + 42)))) ;end if (v42==((439 -(145 + 293)) -0)) then v45=(431 -(44 + 386)) + 0 ;v46=(v20(v44,1,811 -(368 + 423) ) * (2^(100 -68))) + v43 ;v42=20 -((1496 -(998 + 488)) + 8) ;end end end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==0) then return "";end end v50=v3(v16,v18,(v18 + v49) -(1 + 0) );v18=v18 + v49 ;local v51={};for v65=1 + 0 , #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v67=(function() return 0;end)();while true do if (0~=v67) then else if ( #"!"==v52) then local v95=(function() return 0;end)();local v96=(function() return;end)();while true do if ((1518 -(1191 + 327))==v95) then v96=(function() return 0;end)();while true do if (2==v96) then v52=(function() return 2;end)();break;end if (v96~=(0 + 0)) then else v57=(function() return v23();end)();v58=(function() return {};end)();v96=(function() return 1;end)();end if (v96==1) then for v108= #" ",v57 do local v109=(function() return 0;end)();local v110=(function() return;end)();local v111=(function() return;end)();local v112=(function() return;end)();while true do if (v109==1) then v112=(function() return nil;end)();while true do if (v110==(698 -(208 + 490))) then local v221=(function() return 0;end)();while true do if (v221~=1) then else v110=(function() return 1 + 0 ;end)();break;end if (v221==(0 + 0)) then v111=(function() return v21();end)();v112=(function() return nil;end)();v221=(function() return 1;end)();end end end if (v110==(837 -(660 + 176))) then if (v111== #"!") then v112=(function() return v21()~=(0 + 0) ;end)();elseif (v111==2) then v112=(function() return v24();end)();elseif (v111== #"asd") then v112=(function() return v25();end)();end v58[v108]=(function() return v112;end)();break;end end break;end if (v109~=(202 -(14 + 188))) then else local v117=(function() return 0;end)();while true do if (v117~=(675 -(534 + 141))) then else v110=(function() return 0;end)();v111=(function() return nil;end)();v117=(function() return 1 + 0 ;end)();end if ((1 + 0)==v117) then v109=(function() return 1 + 0 ;end)();break;end end end end end v56[ #"xnx"]=(function() return v21();end)();v96=(function() return 2;end)();end end break;end end end if (v52==0) then local v97=(function() return 0 -0 ;end)();local v98=(function() return;end)();while true do if (0==v97) then v98=(function() return 0 -0 ;end)();while true do if (v98~=(0 -0)) then else v53=(function() return {};end)();v54=(function() return {};end)();v98=(function() return 1 + 0 ;end)();end if (v98==(2 + 0)) then v52=(function() return  #">";end)();break;end if ((397 -(115 + 281))==v98) then v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v98=(function() return 4 -2 ;end)();end end break;end end end v67=(function() return 1;end)();end if ((1 + 0)==v67) then if (v52==2) then for v100= #"]",v23() do local v101=(function() return 0 -0 ;end)();local v102=(function() return;end)();local v103=(function() return;end)();while true do if (v101==(0 -0)) then local v106=(function() return 0;end)();while true do if (v106==1) then v101=(function() return 1;end)();break;end if (v106==(867 -(550 + 317))) then v102=(function() return 0 -0 ;end)();v103=(function() return nil;end)();v106=(function() return 1;end)();end end end if ((1 -0)~=v101) then else while true do if (v102==(0 -0)) then v103=(function() return v21();end)();if (v20(v103, #"\\", #",")==(285 -(134 + 151))) then local v113=(function() return 0;end)();local v114=(function() return;end)();local v115=(function() return;end)();local v116=(function() return;end)();while true do if (v113==3) then if (v20(v115, #"asd", #"xxx")~= #"~") then else v116[ #"0313"]=(function() return v58[v116[ #".dev"]];end)();end v53[v100]=(function() return v116;end)();break;end if (v113~=(1665 -(970 + 695))) then else local v204=(function() return 0 -0 ;end)();while true do if (v204~=0) then else v114=(function() return v20(v103,2, #"91(");end)();v115=(function() return v20(v103, #"xnxx",6);end)();v204=(function() return 1;end)();end if (v204==1) then v113=(function() return 1991 -(582 + 1408) ;end)();break;end end end if (v113==(6 -4)) then if (v20(v115, #"[", #"\\")== #",") then v116[2]=(function() return v58[v116[2 -0 ]];end)();end if (v20(v115,7 -5 ,2)~= #"|") then else v116[ #"xnx"]=(function() return v58[v116[ #"91("]];end)();end v113=(function() return 3;end)();end if (v113==(1825 -(1195 + 629))) then v116=(function() return {v22(),v22(),nil,nil};end)();if (v114==(241 -(187 + 54))) then local v293=(function() return 780 -(162 + 618) ;end)();local v294=(function() return;end)();while true do if (v293~=0) then else v294=(function() return 0;end)();while true do if (v294~=0) then else v116[ #"91("]=(function() return v22();end)();v116[ #".dev"]=(function() return v22();end)();break;end end break;end end elseif (v114== #"{") then v116[ #"asd"]=(function() return v23();end)();elseif (v114==(2 + 0)) then v116[ #"xxx"]=(function() return v23() -((2 + 0)^(33 -17)) ;end)();elseif (v114== #"-19") then local v414=(function() return 0 -0 ;end)();while true do if (v414==(0 + 0)) then v116[ #"91("]=(function() return v23() -((1638 -(1373 + 263))^(1016 -(451 + 549))) ;end)();v116[ #".com"]=(function() return v22();end)();break;end end end v113=(function() return 2;end)();end end end break;end end break;end end end for v104= #".",v23() do v54[v104-#"~" ]=(function() return v28();end)();end return v56;end break;end end end end local function v29(v59,v60,v61) local v62=v59[(1 -0) + 0 ];local v63=v59[1 + 1 ];local v64=v59[1 + 2 ];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=1 -0 ;local v73= -(1 -(0 -0));local v74={};local v75={...};local v76=v12("#",...) -((514 -(203 + 310)) + (1993 -(1238 + 755))) ;local v77={};local v78={};for v87=0 + 0 + 0 ,v76 do if ((440>71) and (v87>=v70)) then v74[v87-v70 ]=v75[v87 + (1 -0) ];else v78[v87]=v75[v87 + 1 + 0 ];end end local v79=(v76-v70) + (342 -(218 + 123)) ;local v80;local v81;while true do local v88=0 + 0 ;while true do if (v88==(1582 -(1535 + 46))) then if (v81<=(38 + (1534 -(709 + 825)))) then if (v81<=(87 -69)) then if ((4934>2607) and (v81<=(2 + 6))) then if (v81<=(563 -(306 + 254))) then if (v81<=(2 -1)) then if (v81==(0 + 0)) then local v118=0 -(0 -0) ;local v119;while true do if (v118==(1467 -(899 + 568))) then v119=v80[2 + 0 ];v78[v119](v78[v119 + (2 -1) ]);break;end end else v78[v80[605 -(268 + 335) ]]=v80[3];end elseif (v81==(292 -(60 + (335 -105)))) then v78[v80[2 + 0 ]]=v80[575 -(426 + 146) ]~=(0 + 0) ;else v78[v80[1458 -(282 + 1174) ]]=v78[v80[814 -(569 + 242) ]] -v78[v80[11 -7 ]] ;end elseif (v81<=(7 -2)) then if (v81>(1 + 3)) then local v124=1024 -(706 + 318) ;local v125;local v126;while true do if ((v124==(1 + (864 -(196 + 668)))) or (1400>3116)) then for v347=v125 + (1252 -(721 + 530)) ,v80[1274 -(945 + 326) ] do v7(v126,v78[v347]);end break;end if (v124==((0 -0) -0)) then v125=v80[2 + 0 ];v126=v78[v125];v124=701 -(271 + 429) ;end end else v78[v80[2 + 0 ]]=v61[v80[5 -2 ]];end elseif (v81<=(1506 -(1408 + (190 -98)))) then if v78[v80[1 + 1 ]] then v72=v72 + (1087 -(461 + 625)) ;else v72=v80[1291 -(993 + 295) ];end elseif (v81>((834 -(171 + 662)) + (99 -(4 + 89)))) then local v224=v80[1950 -((3841 -2745) + 852) ];local v225=v78[v224];local v226=v80[1174 -(418 + 753) ];for v298=1 + 0 + 0 ,v226 do v225[v298]=v78[v224 + v298 ];end else local v227=0 + 0 ;local v228;while true do if (v227==(0 + 0)) then v228=v80[1 + 1 ];v78[v228]=v78[v228]();break;end end end elseif (v81<=(4 + 9)) then if ((525<1662) and (v81<=(539 -(406 + 123)))) then if (v81==(1778 -(1749 + 20))) then v78[v80[1 + 1 ]]();else v78[v80[2]]=v78[v80[1325 -(1249 + 73) ]][v80[(8 -6) + 2 ]];end elseif (v81<=(5 + 6)) then v78[v80[1147 -(466 + 679) ]]= not v78[v80[6 -3 ]];elseif (v81>((1520 -(35 + 1451)) -22)) then if v78[v80[1902 -(106 + 1794) ]] then v72=v72 + (2 -1) ;else v72=v80[1 + 2 ];end else local v229=v69[v80[1 + 2 ]];local v230;local v231={};v230=v10({},{__index=function(v301,v302) local v303=0 -0 ;local v304;while true do if (v303==(0 -0)) then v304=v231[v302];return v304[115 -(4 + 110) ][v304[586 -(57 + 527) ]];end end end,__newindex=function(v305,v306,v307) local v308=1427 -(41 + 1386) ;local v309;while true do if (v308==(103 -(17 + 86))) then v309=v231[v306];v309[1 + 0 ][v309[3 -1 ]]=v307;break;end end end});for v310=2 -1 ,v80[170 -((173 -51) + 44) ] do local v311=0 -0 ;local v312;while true do if ((v311==(1 -0)) or (876>2550)) then if ((219<=2456) and (v312[(2 + 1) -2 ]==(251 -175))) then v231[v310-(1 + 0) ]={v78,v312[1 + 2 ]};else v231[v310-(1 -(0 + 0)) ]={v60,v312[1260 -(1043 + 214) ]};end v77[ #v77 + 1 + 0 ]=v231;break;end if ((v311==(0 -0)) or (4219==1150)) then v72=v72 + (4 -3) ;v312=v68[v72];v311=1213 -(323 + 889) ;end end end v78[v80[4 -2 ]]=v29(v229,v230,v61);end elseif ((v81<=(40 -(9 + 16))) or (2989<=222)) then if (v81>(594 -(361 + (532 -313)))) then v78[v80[34 -(19 + 13) ]]= not v78[v80[323 -(53 + 267) ]];else local v133=v80[4 -2 ];local v134,v135=v71(v78[v133]());v73=(v135 + v133) -(1 + 0) ;local v136=(433 -(114 + 319)) + 0 ;for v205=v133,v73 do local v206=413 -(15 + 398) ;while true do if ((2258>1241) and (v206==(0 -0))) then v136=v136 + (983 -((25 -7) + (1234 -270))) ;v78[v205]=v134[v136];break;end end end end elseif (v81<=(60 -44)) then local v137=v80[2 + 0 ];local v138=v78[v137];local v139=v80[3];for v207=2 -1 ,v139 do v138[v207]=v78[v137 + v207 ];end elseif (v81>(11 + 6)) then v78[v80[852 -(20 + 830) ]]=v60[v80[3 + 0 ]];else local v235=v69[v80[129 -(116 + 10) ]];local v236;local v237={};v236=v10({},{__index=function(v313,v314) local v315=v237[v314];return v315[1 + 0 ][v315[740 -(542 + 196) ]];end,__newindex=function(v316,v317,v318) local v319=v237[v317];v319[2 -1 ][v319[1 + 1 ]]=v318;end});for v321=1 -0 ,v80[2 + 2 ] do v72=v72 + (1097 -(709 + 387)) ;local v322=v68[v72];if (v322[1 + 0 ]==(28 + 48)) then v237[v321-(2 -1) ]={v78,v322[1554 -(1126 + 425) ]};else v237[v321-(406 -(118 + 287)) ]={v60,v322[8 -5 ]};end v77[ #v77 + (378 -(142 + 235)) ]=v237;end v78[v80[9 -7 ]]=v29(v235,v236,v61);end elseif (v81<=(54 -26)) then if (v81<=(6 + 17)) then if (v81<=(997 -(553 + 424))) then if (v81==(1302 -(1040 + 243))) then local v140=0 -0 ;local v141;while true do if ((41<4259) and (v140==(0 + (465 -(170 + 295))))) then v141=v80[2 + 0 ];v78[v141]=v78[v141](v13(v78,v141 + 1 + 0 ,v80[2 + 1 ]));break;end end else local v142=v80[2 + 0 ];v78[v142]=v78[v142](v78[v142 + (2 -1) ]);end elseif ((v81<=((31 + 27) -37)) or (1930<56)) then if ((3333==3333) and (v80[1 + 0 + 1 ]==v78[v80[8 -4 ]])) then v72=v72 + 1 + 0 ;else v72=v80[14 -11 ];end elseif (v81>(775 -(239 + 514))) then local v240=0 + 0 ;local v241;while true do if ((v240==(1329 -(797 + 532))) or (2225==20)) then v241=v80[2 + 0 ];v78[v241]=v78[v241](v78[v241 + (2 -1) + 0 ]);break;end end elseif  not v78[v80[(4 + 0) -2 ]] then v72=v72 + 1 ;else v72=v80[3 + 0 ];end elseif (v81<=(1227 -(373 + 829))) then if (v81>(755 -(476 + 255))) then do return;end else v78[v80[435 -(153 + 280) ]][v80[8 -5 ]]=v80[(728 + 406) -(369 + 761) ];end elseif (v81<=(16 + 10)) then v72=v80[5 -2 ];elseif (v81>(51 -24)) then v78[v80[240 -(64 + 174) ]]=v80[1 + 2 ];else v78[v80[2 -0 ]]={};end elseif (v81<=((209 + 160) -((1374 -(957 + 273)) + 192))) then if ((v81<=(246 -(12 + 30 + 174))) or (872>=3092)) then if ((4404>=3252) and (v81==(22 + 7))) then if ((1107>796) and (v78[v80[2 + 0 ]]==v80[2 + 2 ])) then v72=v72 + (668 -(89 + 232 + 346)) ;else v72=v80[3 + 0 ];end else local v147=v80[2];local v148=v80[8 -4 ];local v149=v147 + (1506 -((1383 -1020) + 1141)) ;local v150={v78[v147](v78[v147 + 1 + 0 ],v78[v149])};for v210=2 -1 ,v148 do v78[v149 + v210 ]=v150[v210];end local v151=v150[1 + 0 ];if v151 then v78[v149]=v151;v72=v80[3 + 0 ];else v72=v72 + (1976 -(1913 + 62)) ;end end elseif (v81<=((52 -32) + 11)) then v78[v80[844 -(497 + 345) ]]=v78[v80[7 -4 ]][v80[1937 -(565 + 1368) ]];elseif ((959==959) and (v81>(120 -88))) then v78[v80[1663 -(1477 + 184) ]]=v78[v80[3 -0 ]] * v78[v80[4 + 0 ]] ;else local v249=v80[858 -((1722 -1158) + (1445 -1153)) ];local v250=v80[6 -2 ];local v251=v249 + (5 -3) ;local v252={v78[v249](v78[v249 + 1 + 0 ],v78[v251])};for v326=477 -(41 + 435) ,v250 do v78[v251 + v326 ]=v252[v326];end local v253=v252[(2782 -(389 + 1391)) -(589 + 349 + 63) ];if v253 then v78[v251]=v253;v72=v80[3 + 0 ];else v72=v72 + (2 -1) ;end end elseif ((v81<=(27 + 8)) or (245>=2204)) then if (v81>((121 + 1038) -(936 + (430 -241)))) then local v154=0 + 0 ;local v155;while true do if (v154==((2564 -(783 + 168)) -(1565 + 48))) then v155=v80[2 + 0 ];v78[v155](v13(v78,v155 + (1139 -(782 + 356)) ,v80[(906 -636) -(176 + 91) ]));break;end end else local v156=0 -0 ;local v157;local v158;local v159;local v160;while true do if ((3162>=2069) and ((4 -2)==v156)) then for v354=v157,v73 do local v355=0 -0 ;while true do if (v355==(1092 -(975 + 117))) then v160=v160 + (797 -(588 + 208)) ;v78[v354]=v158[v160];break;end end end break;end if ((1==v156) or (306>3081)) then v73=(v159 + v157) -(1876 -(157 + 1718)) ;v160=0 + 0 + (311 -(309 + 2)) ;v156=6 -4 ;end if (v156==(0 -0)) then v157=v80[(3132 -2112) -(697 + 321) ];v158,v159=v71(v78[v157](v78[v157 + (1890 -(1569 + 320)) ]));v156=2 -1 ;end end end elseif (v81<=(75 -39)) then v78[v80[4 -2 ]]=v78[v80[2 + 1 ]];elseif (v81>(69 -(1244 -(1090 + 122)))) then v78[v80[5 -3 ]]=v29(v69[v80[1230 -(322 + 905) ]],nil,v61);else local v255=611 -(602 + 9) ;local v256;local v257;local v258;local v259;while true do if (v255==(426 -(360 + 65))) then v73=(v258 + v256) -(1190 -(449 + 740)) ;v259=872 -(826 + 46) ;v255=949 -(245 + 702) ;end if ((v255==(6 -4)) or (3513<2706)) then for v389=v256,v73 do local v390=254 -(79 + 175) ;while true do if (v390==(0 + 0 + 0)) then v259=v259 + 1 + (0 -0) ;v78[v389]=v257[v259];break;end end end break;end if (v255==((1299 + 599) -(260 + 1638))) then v256=v80[442 -(382 + 58) ];v257,v258=v71(v78[v256](v13(v78,v256 + (1 -0) ,v80[9 -6 ])));v255=900 -(503 + 396) ;end end end elseif ((2978<3639) and (v81<=((1357 -(628 + 490)) -(92 + 89)))) then if (v81<=(40 + 8)) then if (v81<=(88 -45)) then if (v81<=(118 -78)) then if (v81>(1244 -(902 + 303))) then if ((3682>=2888) and (v78[v80[1 + 1 ]]==v78[v80[8 -4 ]])) then v72=v72 + 1 + 0 ;else v72=v80[6 -3 ];end else v78[v80[1 + 0 + 1 ]]=v78[v80[(4191 -2498) -((5122 -4001) + 569) ]] -v78[v80[218 -(22 + 192) ]] ;end elseif (v81<=(724 -(483 + 200))) then v78[v80[2]]={};elseif ((149<479) and (v81==(1505 -((2178 -(431 + 343)) + 59)))) then local v261=0;local v262;local v263;while true do if (v261==(0 -0)) then v262=v80[2 -0 ];v263=v78[v80[768 -(468 + 297) ]];v261=563 -(334 + 228) ;end if (v261==(3 -2)) then v78[v262 + (2 -1) ]=v263;v78[v262]=v263[v80[6 -2 ]];break;end end else v78[v80[1 + 1 ]]=v80[239 -((284 -143) + 95) ]~=(0 + 0) ;end elseif ((1020>=567) and (v81<=(115 -(202 -132)))) then if (v81==(105 -61)) then v78[v80[2 -0 ]][v80[1 + 2 ]]=v78[v80[13 -9 ]];else local v167=v80[5 -3 ];v78[v167](v13(v78,v167 + 1 + 0 ,v80[2 + 1 ]));end elseif ((v81<=(37 + 9)) or (733>2469)) then v78[v80[1482 -(641 + 839) ]]=v60[v80[4 -1 ]];elseif ((2497==2497) and (v81==(28 + 19))) then if ((3901==3901) and (v78[v80[(131 + 34) -(92 + 71) ]]==v80[2 + 2 ])) then v72=v72 + (1 -0) ;else v72=v80[1151 -(72 + 484 + 592) ];end else local v265=765 -(574 + 191) ;local v266;local v267;while true do if ((201<415) and (v265==(0 + 0))) then v266=v80[4 -2 ];v267={};v265=1 + (1695 -(556 + 1139)) ;end if (((809 -(329 + 479))==v265) or (133==1784)) then for v391=1 + (15 -(6 + 9)) , #v77 do local v392=v77[v391];for v399=0 -0 , #v392 do local v400=v392[v399];local v401=v400[850 -(254 + 595) ];local v402=v400[128 -(55 + 71) ];if (((v401==v78) and (v402>=v266)) or (7>=310)) then v267[v402]=v401[v402];v400[1 -0 ]=v267;end end end break;end end end elseif (v81<=(68 -15)) then if (v81<=(1840 -(573 + 1217))) then if ((4992>286) and (v81==(135 -86))) then local v170=0 + 0 ;local v171;local v172;local v173;local v174;while true do if (v170==0) then v171=v80[2 -0 ];v172,v173=v71(v78[v171](v13(v78,v171 + (940 -(131 + 583 + 225)) ,v80[8 -5 ])));v170=1 -(0 + 0) ;end if ((v170==((170 -(28 + 141)) + 1)) or (2561==3893)) then for v357=v171,v73 do local v358=0 -0 ;while true do if (v358==(0 + 0)) then v174=v174 + (1 -0) ;v78[v357]=v172[v174];break;end end end break;end if (v170==(807 -(118 + 688))) then v73=(v173 + v171) -(49 -(25 + 23)) ;v174=0;v170=1 + 1 + 0 ;end end else v78[v80[2 + 0 ]]();end elseif (v81<=(1937 -(927 + 959))) then v60[v80[10 -7 ]]=v78[v80[2 -0 ]];elseif (v81==(784 -(16 + (883 -167)))) then v78[v80[3 -1 ]]=v61[v80[3]];else local v270=0;local v271;while true do if (v270==(97 -(11 + 61 + 25))) then v271=v80[4 -2 ];v78[v271](v78[v271 + (286 -(175 + 110)) ]);break;end end end elseif ((4362>=1421) and (v81<=55)) then if (v81==(136 -82)) then if (v80[2]==v78[v80[19 -15 ]]) then v72=v72 + 1 ;else v72=v80[1799 -((1820 -(486 + 831)) + 1293) ];end else v78[v80[4 -2 ]][v80[8 -(12 -7) ]]=v80[1030 -(834 + 192) ];end elseif (v81<=(41 + 15)) then local v179=1061 -((2851 -2041) + 251) ;local v180;local v181;while true do if (v179==(1 + 0)) then v78[v180 + 1 + 0 ]=v181;v78[v180]=v181[v80[2 + 2 ]];break;end if ((0 + 0)==v179) then v180=v80[(102 + 433) -(43 + 490) ];v181=v78[v80[736 -(711 + 22) ]];v179=3 -2 ;end end elseif (v81==(916 -(240 + 619))) then local v273=v80[1 + 1 ];v78[v273]=v78[v273]();else local v275=v80[1 + 1 ];v78[v275]=v78[v275](v13(v78,v275 + (1 -(0 -0)) ,v73));end elseif ((75<=3546) and (v81<=(5 + 63))) then if (v81<=(1807 -(1344 + 400))) then if (v81<=(465 -(255 + 150))) then if (v81==(47 + 12)) then local v182=v80[2 + 0 ];local v183={};for v213=4 -3 , #v77 do local v214=0 -(1263 -(668 + 595)) ;local v215;while true do if ((2680<=3418) and (v214==(1739 -(404 + 1335)))) then v215=v77[v213];for v378=0, #v215 do local v379=406 -(183 + 223) ;local v380;local v381;local v382;while true do if ((v379==0) or (4288<2876)) then v380=v215[v378];v381=v380[1 -0 ];v379=1;end if ((2462>=1147) and (v379==(1 + 0))) then v382=v380[1 + 1 ];if ((v381==v78) and (v382>=v182)) then v183[v382]=v381[v382];v380[338 -(10 + 327) ]=v183;end break;end end end break;end end end else for v216=v80[2 + 0 ],v80[605 -(512 + 90) ] do v78[v216]=nil;end end elseif (v81<=(1967 -(1665 + 241))) then v60[v80[341 -(118 + 220) ]]=v78[v80[1 + 1 ]];elseif (v81>(21 + 37 + 4)) then v78[v80[451 -(108 + 69 + 272) ]][v80[2 + 1 ]]=v78[v80[16 -12 ]];else do return;end end elseif (v81<=(1558 -(711 + 782))) then if (v81>(122 -58)) then v78[v80[471 -(270 + 199) ]]=v78[v80[1 + 2 ]] * v78[v80[1823 -((1581 -1001) + (1529 -(23 + 267))) ]] ;else v78[v80[1238 -(298 + 938) ]]=v78[v80[8 -5 ]] + v78[v80[1670 -(636 + 1030) ]] ;end elseif ((v81<=(64 + 2)) or (4914<2480)) then local v188=(1944 -(1129 + 815)) + 0 ;local v189;local v190;local v191;while true do if ((v188==(0 + 0)) or (1559==1240)) then v189=v80[1 + 1 ];v190={v78[v189](v13(v78,v189 + 1 + 0 ,v73))};v188=1 + 0 ;end if ((566==566) and (v188==(1 + 0))) then v191=1167 -(645 + 522) ;for v360=v189,v80[1794 -(1010 + 780) ] do local v361=0 + 0 ;while true do if (v361==(0 -0)) then v191=v191 + (4 -3) ;v78[v360]=v190[v191];break;end end end break;end end elseif (v81>67) then local v279=v80[5 -3 ];local v280={v78[v279](v13(v78,v279 + (2 -1) ,v73))};local v281=0 -0 ;for v338=v279,v80[509 -(351 + (1904 -(1326 + 424))) ] do v281=v281 + (1575 -((2425 -1144) + 293)) ;v78[v338]=v280[v281];end else v78[v80[23 -(20 + 1) ]]=v29(v69[v80[269 -(28 + (869 -631)) ]],nil,v61);end elseif (v81<=73) then if (v81<=(156 -86)) then if (v81>(1202 -(549 + (702 -(88 + 30))))) then local v192=1559 -(1381 + 178) ;local v193;while true do if (v192==(0 -0)) then v193=v80[2 + 0 ];v78[v193]=v78[v193](v13(v78,v193 + 1 + 0 ,v80[2 + 1 ]));break;end end else local v194=0 + 0 ;local v195;while true do if ((3921>=3009) and (v194==(0 -0))) then v195=v80[2 + 0 ];v78[v195]=v78[v195](v13(v78,v195 + (471 -(381 + 89)) ,v73));break;end end end elseif ((2063>=1648) and (v81<=(63 + 8))) then if  not v78[v80[2 + 0 ]] then v72=v72 + 1 ;else v72=v80[4 -(772 -(720 + 51)) ];end elseif ((1066>=452) and (v81>(1228 -(1074 + 82)))) then if (v78[v80[3 -1 ]]==v78[v80[(22 -12) -6 ]]) then v72=v72 + (1785 -(214 + 1570)) ;else v72=v80[1458 -(990 + 465) ];end else v78[v80[(1777 -(421 + 1355)) + 1 ]]=v78[v80[(2 -0) + 1 ]] + v78[v80[4 + 0 ]] ;end elseif ((4974>=2655) and (v81<=(73 + 2))) then if ((v81==(291 -217)) or (2721<=907)) then local v196=v80[1728 -(1668 + 58) ];local v197,v198=v71(v78[v196](v78[v196 + (627 -(512 + 114)) ]));v73=(v198 + v196) -(2 -1) ;local v199=0 -0 ;for v218=v196,v73 do v199=v199 + (1 -0) ;v78[v218]=v197[v199];end else v72=v80[(5 + 5) -7 ];end elseif (v81<=(36 + (1123 -(286 + 797)))) then v78[v80[1 + 1 ]]=v78[v80[3 + 0 ]];elseif (v81>((1092 -793) -222)) then local v285=0 -0 ;local v286;local v287;local v288;local v289;while true do if (v285==(2 + 0)) then for v393=v286,v73 do v289=v289 + (1995 -((179 -70) + 1885)) ;v78[v393]=v287[v289];end break;end if (v285==(1470 -(1269 + 200))) then v73=(v288 + v286) -(1 -0) ;v289=815 -(98 + 717) ;v285=1 + 1 ;end if (v285==(826 -(802 + 24))) then v286=v80[2 -0 ];v287,v288=v71(v78[v286]());v285=1;end end else for v345=v80[(441 -(397 + 42)) -0 ],v80[1 + 0 + 2 ] do v78[v345]=nil;end end v72=v72 + 1 ;break;end if (v88==(0 + 0)) then v80=v68[v72];v81=v80[1 + 0 ];v88=1 + 0 ;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
-- ______ ___  __   __ _____    ___  _   _ _____ 
-- \  ___) _ \|  \ /  |  ___)  / _ \| \ | |  ___)
--  \ \ | | | |   v   | |_    | | | |  \| | |_   
--   > >| | | | |\_/| |  _)   | | | |     |  _)  --OWNER
--  / /_| |_| | |   | | |___  | |_| | |\  | |___ 
-- /_____)___/|_|   |_|_____)  \___/|_| \_|_____)
                                              
